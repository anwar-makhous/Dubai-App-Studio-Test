// Mocks generated by Mockito 5.4.4 from annotations
// in dubai_app_studio/test/features/beneficiary/data/repositories/beneficiary_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dubai_app_studio/core/usecases/add_beneficiary_params.dart'
    as _i4;
import 'package:dubai_app_studio/core/usecases/delete_beneficiary_params.dart'
    as _i5;
import 'package:dubai_app_studio/core/usecases/send_otp_params.dart' as _i7;
import 'package:dubai_app_studio/core/usecases/verify_otp_params.dart' as _i8;
import 'package:dubai_app_studio/features/beneficiary/data/data_sources/beneficiary_data_source.dart'
    as _i2;
import 'package:dubai_app_studio/features/beneficiary/data/models/beneficiary_model.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BeneficiaryDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBeneficiaryDataSource extends _i1.Mock
    implements _i2.BeneficiaryDataSource {
  MockBeneficiaryDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> addBeneficiary(
          {required _i4.AddBeneficiaryParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBeneficiary,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteBeneficiary(
          {required _i5.DeleteBeneficiaryParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBeneficiary,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i6.BeneficiaryModel>> getBeneficiaries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBeneficiaries,
          [],
        ),
        returnValue: _i3.Future<List<_i6.BeneficiaryModel>>.value(
            <_i6.BeneficiaryModel>[]),
      ) as _i3.Future<List<_i6.BeneficiaryModel>>);

  @override
  _i3.Future<bool> sendOtp({required _i7.SendOtpParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOtp,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> verifyOtp({required _i8.VerifyOtpParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOtp,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
