// Mocks generated by Mockito 5.4.4 from annotations
// in dubai_app_studio/test/features/recharge/domain/usecases/send_amount_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dubai_app_studio/core/error/error.dart' as _i5;
import 'package:dubai_app_studio/core/usecases/send_amount_params.dart' as _i7;
import 'package:dubai_app_studio/features/recharge/domain/entities/history_item.dart'
    as _i6;
import 'package:dubai_app_studio/features/recharge/domain/repositories/recharge_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RechargeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRechargeRepository extends _i1.Mock
    implements _i3.RechargeRepository {
  MockRechargeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.HistoryItem>>>
      getRechargeHistory() => (super.noSuchMethod(
            Invocation.method(
              #getRechargeHistory,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.HistoryItem>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.HistoryItem>>(
              this,
              Invocation.method(
                #getRechargeHistory,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.HistoryItem>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> sendAmount(
          {required _i7.SendAmountParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendAmount,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #sendAmount,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
